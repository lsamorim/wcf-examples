//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.InvoiceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary1")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdField, value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InvoiceServiceReference.IInvoiceService")]
    public interface IInvoiceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/SubmitInvocie", ReplyAction="http://tempuri.org/IInvoiceService/SubmitInvocieResponse")]
        void SubmitInvocie(Client.InvoiceServiceReference.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/SubmitInvocie", ReplyAction="http://tempuri.org/IInvoiceService/SubmitInvocieResponse")]
        System.Threading.Tasks.Task SubmitInvocieAsync(Client.InvoiceServiceReference.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetStatus", ReplyAction="http://tempuri.org/IInvoiceService/GetStatusResponse")]
        int GetStatus(Client.InvoiceServiceReference.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetStatus", ReplyAction="http://tempuri.org/IInvoiceService/GetStatusResponse")]
        System.Threading.Tasks.Task<int> GetStatusAsync(Client.InvoiceServiceReference.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetInvoices", ReplyAction="http://tempuri.org/IInvoiceService/GetInvoicesResponse")]
        Client.InvoiceServiceReference.Invoice[] GetInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetInvoices", ReplyAction="http://tempuri.org/IInvoiceService/GetInvoicesResponse")]
        System.Threading.Tasks.Task<Client.InvoiceServiceReference.Invoice[]> GetInvoicesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvoiceServiceChannel : Client.InvoiceServiceReference.IInvoiceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvoiceServiceClient : System.ServiceModel.ClientBase<Client.InvoiceServiceReference.IInvoiceService>, Client.InvoiceServiceReference.IInvoiceService {
        
        public InvoiceServiceClient() {
        }
        
        public InvoiceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvoiceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SubmitInvocie(Client.InvoiceServiceReference.Invoice invoice) {
            base.Channel.SubmitInvocie(invoice);
        }
        
        public System.Threading.Tasks.Task SubmitInvocieAsync(Client.InvoiceServiceReference.Invoice invoice) {
            return base.Channel.SubmitInvocieAsync(invoice);
        }
        
        public int GetStatus(Client.InvoiceServiceReference.Invoice invoice) {
            return base.Channel.GetStatus(invoice);
        }
        
        public System.Threading.Tasks.Task<int> GetStatusAsync(Client.InvoiceServiceReference.Invoice invoice) {
            return base.Channel.GetStatusAsync(invoice);
        }
        
        public Client.InvoiceServiceReference.Invoice[] GetInvoices() {
            return base.Channel.GetInvoices();
        }
        
        public System.Threading.Tasks.Task<Client.InvoiceServiceReference.Invoice[]> GetInvoicesAsync() {
            return base.Channel.GetInvoicesAsync();
        }
    }
}
